pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "preeti730/simple-hello"        // your Docker Hub repo
        DOCKER_HUB_CREDS = "dockerhub-cred"           // Jenkins Docker Hub credentials ID
        KUBE_NAMESPACE = "preeti"                     // your EKS namespace
        CLUSTER_NAME = "batch4-Team3-cluster"         // your EKS cluster name
        AWS_REGION = "us-east-1"                      // update to your EKS region
        REPO_URL = "https://github.com/preetishinge/Springboot-Docker.git"
    }

    tools {
        maven 'maven3'
    }

    stages {

        stage('Checkout Code') {
            steps {
                git credentialsId: 'git-preeti', url: env.REPO_URL, branch: 'main'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE:$BUILD_NUMBER .'
                sh 'docker tag $DOCKER_IMAGE:$BUILD_NUMBER $DOCKER_IMAGE:latest'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: "$DOCKER_HUB_CREDS",
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push $DOCKER_IMAGE:$BUILD_NUMBER'
                    sh 'docker push $DOCKER_IMAGE:latest'
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
                    sh """
                        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
                        kubectl apply -f k8s/namespace.yaml
                        sed -i "s@<IMAGE_PLACEHOLDER>@$DOCKER_IMAGE:$BUILD_NUMBER@g" k8s/deployment.yaml
                        kubectl apply -n $KUBE_NAMESPACE -f k8s/deployment.yaml
                    """
                }
            }
        }

    }
}
